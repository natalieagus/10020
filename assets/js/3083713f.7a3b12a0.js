"use strict";(self.webpackChunksite_docusaurus_template=self.webpackChunksite_docusaurus_template||[]).push([[8847],{4444:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var s=a(7462),r=(a(7294),a(3905)),t=(a(1694),a(3707),a(6533),a(505));const i={sidebar_position:2,sidebar_class_name:"hidden"},o="Week 2: Analysing Programs",l={unversionedId:"analysing-programs",id:"analysing-programs",title:"Week 2: Analysing Programs",description:"Concept Map",source:"@site/learning-objectives/02-analysing-programs.md",sourceDirName:".",slug:"/analysing-programs",permalink:"/2023/learning-objectives/analysing-programs",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_class_name:"hidden"},sidebar:"tutorialSidebar",previous:{title:"Week 1: Python",permalink:"/2023/learning-objectives/python"},next:{title:"Week 3: Divide and Conquer",permalink:"/2023/learning-objectives/divide-conquer"}},c={},d=[{value:"Concept Map",id:"concept-map",level:3}],p={toc:d},x="wrapper";function u(e){let{components:n,...a}=e;return(0,r.kt)(x,(0,s.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"week-2-analysing-programs"},"Week 2: Analysing Programs"),(0,r.kt)(t.Z,{mdxType:"ChatBaseBubble"}),(0,r.kt)("h3",{id:"concept-map"},"Concept Map"),(0,r.kt)("mermaid",{value:"flowchart TD\n    A((Week 2<br>Heap and Complexity)) --\x3e |learns| DS((Data Structure))\n    A --\x3e |learns| AL((Algorithm))\n    A --\x3e |learns| C((Complexity))\n    style DS color:red\n    style AL color:red\n    style C color:red\n    C --\x3e |learns| AN((Asymptotic<br>Notation))\n    C --\x3e |analyze| HS((Heapsort))\n    style HS color:dodgerblue\n    C --\x3e |describes| CT((Computation<br>Time))\n    style CT color:dodgerblue\n    C --\x3e |uses| CM((Computational<br>Model))\n    AL --\x3e |learns| HS\n    AL --\x3e |implements| BH((Build Heap))\n    AL --\x3e |implements| H((Heapify))\n    DS --\x3e |learns| BINH((Binary Heap))\n    style BINH color:dodgerblue\n    BINH --\x3e |specific case of| BT((Binary Tree))\n    BINH --\x3e |uses| L((List))\n    BINH --\x3e |access| N((Node))\n    BINH --\x3e |maintains| HPROP((Heap Property))\n    BINH --\x3e |is used in| HS\n    BINH --\x3e |process| BH\n    BT --\x3e |specific case of| TR((Tree))\n    BT --\x3e |has two| CHLD((Children))\n    N --\x3e |access| PR((Parent))\n    N --\x3e |access| CHLD\n    TR --\x3e |has| LF((Leaf))\n    TR --\x3e |has| RT((Root))\n    TR --\x3e |has| N\n    RT --\x3e |is-a| N\n    LF --\x3e |is-a| N\n    LF --\x3e |has no| CHLD\n    CHLD --\x3e |access| LTCD((Left Child))\n    CHLD --\x3e |access| RTCD((Right Child))\n    HPROP --\x3e |uses| HY((Heapify))\n    BH --\x3e |uses| HY\n    AL --\x3e |implements| HY\n    AN --\x3e |defines| BGONN((Big-O Notation))\n    BGONN --\x3e |derive for| HS\n    BGONN --\x3e |derive for| BEST((Bubble Sort))\n    BGONN --\x3e |derive for| INST((Insertion Sort))\n    HS --\x3e |runs| LL((log linear))\n    CT --\x3e |for| HS\n    CM --\x3e |derive| CT\n    CT --\x3e |can be| LL\n    CT --\x3e |can be| LC((Logarithmic))\n    CT --\x3e |can be| LR((Linear))\n    LC --\x3e |faster than| LR\n    LR --\x3e |faster than| LL\n    LL --\x3e |faster than| QC((Quadratic))\n    BEST --\x3e |runs| QC\n    CT --\x3e |for| BEST\n    INST --\x3e |runs| QC\n    CT --\x3e |can be| QUBIC((Qubic))\n    QC --\x3e |faster than| QUBIC\n    QUBIC --\x3e |faster than| EXP((Exponential))\n    CT --\x3e |can be | EXP"}),(0,r.kt)("p",null,"See below if you need to zoom in."),(0,r.kt)("iframe",{src:"https://sutdapac-my.sharepoint.com/personal/oka_kurniawan_sutd_edu_sg/_layouts/15/embed.aspx?UniqueId=df84c255-051b-45d1-ab23-5b98f3475718",width:"640",height:"360",frameborder:"0",scrolling:"no",allowfullscreen:!0,title:"DDW Concept Map-Week 2.drawio.png"}))}u.isMDXComponent=!0}}]);