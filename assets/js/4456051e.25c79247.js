"use strict";(self.webpackChunksite_docusaurus_template=self.webpackChunksite_docusaurus_template||[]).push([[2808],{4301:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var n=a(7462),l=(a(7294),a(3905)),o=(a(1694),a(3707),a(6533),a(9303));const r={sidebar_position:2},s="Bootstrap",i={unversionedId:"advanced/bootstrap",id:"advanced/bootstrap",title:"Bootstrap",description:"Bootstrap is a free and open-source CSS framework directed at responsive, mobile-first front-end web development.",source:"@site/projects/advanced/bootstrap.md",sourceDirName:"advanced",slug:"/advanced/bootstrap",permalink:"/2023/projects/advanced/bootstrap",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"SQLAlchemy",permalink:"/2023/projects/advanced/database"},next:{title:"Forms",permalink:"/2023/projects/advanced/forms"}},p={},d=[{value:"Pre-Requisite",id:"pre-requisite",level:3},{value:"Base HTML",id:"base-html",level:2},{value:"Display Heading and Paragraph Styles",id:"display-heading-and-paragraph-styles",level:2},{value:"Table Styles",id:"table-styles",level:2},{value:"References",id:"references",level:2}],c={toc:d},m="wrapper";function u(e){let{components:t,...a}=e;return(0,l.kt)(m,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"bootstrap"},"Bootstrap"),(0,l.kt)("p",null,"Bootstrap is a free and open-source CSS framework directed at responsive, mobile-first front-end web development."),(0,l.kt)(o.Z,{mdxType:"ChatBaseBubble"}),(0,l.kt)("h3",{id:"pre-requisite"},"Pre-Requisite"),(0,l.kt)("p",null,"This notes explains briefly how we use Flask-Bootstrap for our HTML templates in Mini Project 2. You will need to read the following tutorial:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-ii-templates"},"The Flask Mega-Tutorial Part II: Templates")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xi-facelift"},"The Flask Mega-Tutorial Part XI: Facelift"))),(0,l.kt)("p",null,"We will only explains those relevant to this mini project and more explanations can be found in those tutorials."),(0,l.kt)("h2",{id:"base-html"},"Base HTML"),(0,l.kt)("p",null,"In this mini project, we have one base HTML file inside ",(0,l.kt)("inlineCode",{parentName:"p"},"app/templates/base.html"),". This HTML file has the following structure following the ",(0,l.kt)("a",{parentName:"p",href:"https://bootstrap-flask.readthedocs.io/en/stable/migrate/"},"documentation"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    {% block head %}\n    \x3c!-- Required meta tags --\x3e\n    <meta charset="utf-8" />\n    <meta\n      name="viewport"\n      content="width=device-width, initial-scale=1, shrink-to-fit=no"\n    />\n\n    {% block styles %}\n    \x3c!-- Bootstrap CSS --\x3e\n    {{ bootstrap.load_css() }} {% endblock %}\n\n    <title>Your page title</title>\n    {% endblock %}\n  </head>\n  <body>\n    \x3c!-- Your page content --\x3e\n    {% block content %}{% endblock %} {% block scripts %}\n    \x3c!-- Optional JavaScript --\x3e\n    {{ bootstrap.load_js() }} {% endblock %}\n  </body>\n</html>\n')),(0,l.kt)("p",null,"In order to use this file, you have to create ",(0,l.kt)("inlineCode",{parentName:"p"},"Bootstrap5")," object in your ",(0,l.kt)("inlineCode",{parentName:"p"},"app/__init__.py")," file. This uses Bootstrap 5 instead of Bootstrap 4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from flask_bootstrap import Bootstrap5\n...\nbootstrap = Bootstrap5(application)\n")),(0,l.kt)("p",null,"The base HTML also contains the code for the navigation bar on the top:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<nav class="navbar navbar-default">\n  <div class="container">\n    <div class="navbar-header">\n      <button\n        type="button"\n        class="navbar-toggle collapsed"\n        data-toggle="collapse"\n        data-target="#bs-example-navbar-collapse-1"\n        aria-expanded="false"\n      >\n        <span class="sr-only">Toggle navigation</span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n        <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="{{ url_for(\'index\') }}">Mini Project 2</a>\n    </div>\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n      <ul class="nav navbar-nav">\n        <li><a href="{{ url_for(\'index\') }}">Home</a></li>\n        <li><a href="{{ url_for(\'questions\') }}">Questions</a></li>\n        <li><a href="{{ url_for(\'challenges\') }}">Challenges</a></li>\n        <li><a href="{{ url_for(\'halloffame\') }}">Hall of Fame</a></li>\n        <li><a href="{{ url_for(\'users\') }}">Users</a></li>\n      </ul>\n      <ul class="nav navbar-nav navbar-right">\n        {% if current_user.is_anonymous %}\n        <li><a href="{{ url_for(\'login\') }}">Login</a></li>\n        {% else %}\n        <li><a href="{{ url_for(\'logout\') }}">Logout</a></li>\n        {% endif %}\n      </ul>\n    </div>\n  </div>\n</nav>\n')),(0,l.kt)("p",null,"After the navigation bar, the code describes the content block."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'{% block content %}\n<div class="container">\n  {% with messages = get_flashed_messages() %} {% if messages %} {% for message\n  in messages %}\n  <div class="alert alert-info" role="alert">{{ message }}</div>\n  {% endfor %} {% endif %} {% endwith %}\n</div>\n{% endblock %}\n')),(0,l.kt)("p",null,"The code above is used to display any flashed message. An example for a flash message is when the web application gives an alert or display an error message. In our mini project, we use this several times, for example after we create a new question inside ",(0,l.kt)("inlineCode",{parentName:"p"},"app/routes.py"),", under ",(0,l.kt)("inlineCode",{parentName:"p"},"questions()")," function definition, we can find the following code."),(0,l.kt)("p",null,"Notice that we use the code ",(0,l.kt)("inlineCode",{parentName:"p"},'<div class="alert alert-info" role="alert">')," to style our alert. You can find more info in ",(0,l.kt)("a",{parentName:"p",href:"https://getbootstrap.com/docs/5.0/components/alerts/"},"Bootstrap's Alert Documentation"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def questions():\n    ...\n    flash('Congratulations, you have created a new question.')\n    ...\n")),(0,l.kt)("p",null,"Part of the ",(0,l.kt)("inlineCode",{parentName:"p"},"content")," block is the ",(0,l.kt)("inlineCode",{parentName:"p"},"app_content")," block."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},"{% block app_content %}{% endblock %}\n")),(0,l.kt)("p",null,"The above code inside ",(0,l.kt)("inlineCode",{parentName:"p"},"base.html")," leaves the ",(0,l.kt)("inlineCode",{parentName:"p"},"app_content")," block empty. This will be filled in the other HTML files. for example, in the ",(0,l.kt)("inlineCode",{parentName:"p"},"index.html")," file, you will find:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'{% extends "base.html" %} {% block app_content %}\n\n<h1 class="display-1">Hi, {{ current_user.username }}!</h1>\n... {% endblock %}\n')),(0,l.kt)("p",null,"Lastly, the ",(0,l.kt)("inlineCode",{parentName:"p"},"base.html")," contains the code to include any scripts we use."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'{% block scripts %} {{ super() }}\n<script type="module">\n  import * as library from "/static/__target__/clientlibrary.js";\n  window.library = library;\n<\/script>\n{% endblock %}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The line ",(0,l.kt)("inlineCode",{parentName:"li"},"{{ super() }}")," is to ensure that all the other scripts in the parent HTML files are included."),(0,l.kt)("li",{parentName:"ul"},"The next line is to include our ",(0,l.kt)("inlineCode",{parentName:"li"},"clientlibrary.js")," which is stored inside our ",(0,l.kt)("inlineCode",{parentName:"li"},"app/static/__target__/")," folder. Recall that the ",(0,l.kt)("inlineCode",{parentName:"li"},"__target__")," folder is produced by Transcrypt when we compile our ",(0,l.kt)("inlineCode",{parentName:"li"},"clientlibrary.py"),".")),(0,l.kt)("h2",{id:"display-heading-and-paragraph-styles"},"Display Heading and Paragraph Styles"),(0,l.kt)("p",null,"When you open ",(0,l.kt)("inlineCode",{parentName:"p"},"index.html")," inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"template")," folder, you will see that we use both ",(0,l.kt)("inlineCode",{parentName:"p"},"display-1")," for header and ",(0,l.kt)("inlineCode",{parentName:"p"},"lead")," for paragraph."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<h1 class="display-1">Hi, {{ current_user.username }}!</h1>\n\n<p class="lead">Welcome ...</p>\n')),(0,l.kt)("p",null,"For more options on typography, check ",(0,l.kt)("a",{parentName:"p",href:"https://getbootstrap.com/docs/5.0/content/typography/"},"Bootstrap's Typography Documentation"),"."),(0,l.kt)("h2",{id:"table-styles"},"Table Styles"),(0,l.kt)("p",null,"We use ",(0,l.kt)("a",{parentName:"p",href:"https://getbootstrap.com/docs/5.0/content/tables/"},"Bootstrap's Table Style")," in several files like ",(0,l.kt)("inlineCode",{parentName:"p"},"question.html"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"challenge.html"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"users.html"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"halloffame.html"),"."),(0,l.kt)("p",null,"The code below is from ",(0,l.kt)("inlineCode",{parentName:"p"},"users.html"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<table class="table table-striped">\n  <thead>\n    <tr>\n      <th scope="col">#</th>\n      <th scope="col">User</th>\n    </tr>\n  </thead>\n  <tbody>\n    {% for idx in range(users|length) %}\n    <tr>\n      <th scope="row" class="lead">{{ idx+1 }}</th>\n      <td class="lead">#Replace Me#</td>\n    </tr>\n    {% endfor %}\n  </tbody>\n</table>\n')),(0,l.kt)("p",null,"We use ",(0,l.kt)("inlineCode",{parentName:"p"},"table")," inside the ",(0,l.kt)("inlineCode",{parentName:"p"},"class")," option for ",(0,l.kt)("inlineCode",{parentName:"p"},"<table>")," to enable Bootstrap's Table style. We also added ",(0,l.kt)("inlineCode",{parentName:"p"},"table-striped")," so that each row is having an alternately light and dark color background."),(0,l.kt)("h2",{id:"references"},"References"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://getbootstrap.com/docs/5.0/components/navbar/"},"Bootstrap's Navbar Documentation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://getbootstrap.com/docs/5.0/components/alerts/"},"Bootstrap's Alert Documentation"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://getbootstrap.com/docs/5.0/content/tables/"},"Bootstrap's Table Documentation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://getbootstrap.com/docs/5.0/content/typography/"},"Bootstrap's Typography Documentation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://getbootstrap.com/docs/5.0/getting-started/introduction/"},"Bootstrap Documentation"))))}u.isMDXComponent=!0}}]);